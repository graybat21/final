<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
<!-- xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd" -->

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- tiles3 -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="2" />
	</bean>


	<!-- 데이터베이스 연결 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@istudy.iptime.org:7000:ORCL" />
		<property name="username" value="KH0502" />
		<property name="password" value="oracle" />
	</bean> 
	<!-- SqlSession -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" /> <!-- MyBatis 설정 파일의 위치를 지정합니다. -->
		<property name="configLocation" value="classpath:/mybatis-config.xml" /> <!-- SQL 파일의 위치를 지정합니다. -->
		<property name="mapperLocations" value="classpath:/sqlmap/*.xml" />
	</bean>
	<!-- SqlSession -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> 
	<!-- 지정된 베이스 패키지에서 DAO(Mapper) 를 검색하여 등록합니다. -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="net.kh.dao" /> 
	</bean> 
	
	<!-- messageSource -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
				<value>ApplicationResource</value>
			</list>
		</property>
	</bean>
	<!-- Form 검증 관련 Bean 등록 -->
	<!-- <bean id="loginValidator" class="net.kh.utils.LoginValidator" /> -->
	<bean id="memberEntryValidator" class="net.kh.utils.MemberEntryValidator" />
	
	
	<!-- 트랜잭션 매니저 bean 을 등록합니다. -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	<!-- 아노테이션 기반의 트랜잭션을 사용합니다. -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- email -->
	<bean id="javaMailSenderImpl" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="username" value="guesthi1111@gmail.com" />
		<property name="password" value="oracle11" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.required">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.socketFactory.fallback">false</prop>
				<prop key="mail.smtp.port">465</prop>
				<prop key="mail.smtp.socketFactory.port">465</prop>
				<!--<prop key="mail.transport.protocol">smtps</prop> -->
			</props>
		</property>
	</bean>
</beans>
